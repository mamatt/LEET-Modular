#ifndef __module_env_h
#define __module_env_h

#include "gd32vf103.h"
#include "drivers/display.h"

// sub modes
#define mode_ADSR 0
#define mode_ADR 1

#define envColor RGBToWord(0x00, 0xff, 0x00) 
#define envSubMenuMax 2
const uint8_t envImage[439] = {255,255,255,255,255,255,255,255,150,5,63,32,8,13,15,10,5,11,20,12,31,2,170,0,31,0,29,1,71,0,40,0,13,0,63,0,40,1,106,0,37,0,47,0,11,0,26,1,3,5,148,0,5,0,69,0,3,1,129,0,60,0,11,0,25,0,3,0,72,0,40,0,116,0,3,0,133,0,58,0,11,0,24,0,3,0,107,0,37,0,58,0,29,0,10,0,75,20,27,0,20,0,34,0,37,0,2,0,14,0,59,0,40,0,61,0,12,0,11,0,28,0,139,0,93,0,1,0,14,0,73,0,58,0,19,0,23,0,11,0,24,0,1,0,18,0,141,0,45,0,24,0,23,0,121,0,51,0,40,0,17,0,59,0,40,0,86,0,51,0,67,0,39,1,10,0,4,0,43,0,61,0,2,0,66,19,50,0,44,0,25,0,1,0,24,0,84,0,34,0,47,0,10,0,25,0,1,0,21,0,3,29,22,0,40,0,12,0,38,0,10,0,6,0,65,0,32,0,74,0,73,0,54,1,110,0,10,0,1,0,41,0,38,0,29,2,133,0,42,0,29,0,29,25,23,0,30,0,8,0,15,0,10,0,42,0,10,0,255,149,0,17,0,40,0,10,0,30,0,56,0,34,19,27,0,21,0,70,0,62,0,117,0,13,0,10,0,112,0,40,0,18,0,47,0,0,0,10,0,125,0,39,0,103,0,61,0,100,0,27,0,10,0,92,0,83,0,90,0,82,0,40,0,80,0,94,0,1,0,27,0,39,0,10,0,56,0,216,0,118,0,1,0,80,0,15,0,37,0,101,0,12,0,11,20,7,0,179,0,48,0,87,0,32,0,66,0,1,1,63,0,13,0,51,0,102,0,2,2,90,0,141,0,4,1,74,0,49,0,34,3,66,1,9,0,31,0,7,0,186,0,61,0,16,0,31,0,14,0,109,3,87,0,34,0,255,104,32,8,10,18,10,21,13,255,255,255,255,209};

class module_env 
{
    public:
        const char *subMenuText[2] = {"ADSR","ADR"} ;
        const char *potsName[3] = {"Atck","Dcay","Rels"} ;

        uint16_t int_adsr(uint16_t gate, uint16_t pot_a, uint16_t pot_d, uint16_t pot_r, uint8_t noSustain);
        void draw(display &disp, uint16_t gate, uint16_t pot_a, uint16_t pot_d, uint16_t pot_r, uint8_t noSustain);

    private:
        uint16_t tCount;
        uint8_t adsrMode;
        uint8_t oldGate;
        uint8_t xorGate;
        int8_t gateCount;
        uint16_t a, d, s, r;
};
#endif