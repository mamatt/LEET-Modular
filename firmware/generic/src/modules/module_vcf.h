#ifndef __module_vcf_h
#define __module_vcf_h

#include "gd32vf103.h"

// sub modes
#define mode_2_pole_v1 0
#define mode_2_pole_v2 1
#define mode_4_pole 2
#define mode_test 3

#define vcfColor RGBToWord(0x61, 0xff, 0x79)        // light green
const uint8_t vcfImage[530] = {255,255,255,239,0,237,0,0,0,235,0,2,0,255,221,0,1,0,116,13,101,0,57,11,20,12,15,2,13,3,13,32,121,0,31,0,12,2,20,2,42,0,64,0,75,0,24,0,26,1,7,0,96,0,0,0,73,0,11,0,10,1,134,0,2,0,41,0,52,1,213,0,11,0,8,0,32,0,96,0,5,0,1,0,95,0,41,0,31,0,68,0,69,0,11,0,7,0,130,0,96,0,7,0,17,4,113,0,78,0,19,0,14,3,4,2,8,0,19,20,43,0,20,0,57,0,12,0,11,0,22,0,11,1,14,0,75,0,0,1,112,0,12,1,14,1,24,0,62,0,3,0,14,0,48,0,23,0,11,0,6,0,12,0,18,0,86,0,107,0,20,0,20,0,1,0,85,0,91,0,19,0,35,1,82,0,1,0,0,0,31,2,67,0,20,0,32,0,81,0,27,0,2,0,53,0,19,0,11,0,45,0,60,0,1,0,104,0,67,18,79,0,57,0,10,0,178,1,24,0,10,0,6,0,20,0,11,0,33,0,72,0,1,0,43,0,1,0,55,0,177,0,46,0,100,0,28,5,16,0,34,0,4,0,53,0,21,0,94,0,5,0,4,0,1,0,41,0,2,0,4,10,27,0,10,0,57,0,58,0,2,1,2,4,40,0,6,0,0,0,1,1,10,0,160,0,1,0,8,0,34,0,5,0,20,0,25,0,10,0,10,0,77,0,26,0,1,0,3,1,4,1,45,0,2,1,1,10,110,18,37,4,14,0,14,0,9,0,3,0,5,1,21,0,13,0,10,0,118,2,45,0,10,0,42,0,0,0,10,0,59,0,84,0,30,2,130,0,152,0,10,0,255,11,0,21,1,97,0,21,0,1,0,60,0,14,0,33,0,9,0,91,0,82,0,29,0,17,1,22,0,71,0,68,0,68,1,100,1,1,0,82,0,31,1,11,1,122,0,5,0,78,0,14,2,4,3,7,0,6,0,85,0,2,1,18,1,61,0,37,4,31,0,74,2,13,0,68,0,20,0,151,0,3,0,225,0,7,0,1,0,58,0,22,0,31,0,119,1,84,0,38,0,97,0,1,0,54,0,14,0,25,0,28,0,19,0,159,0,27,1,24,1,113,0,97,1,19,2,110,0,2,0,53,13,32,2,13,2,13,11,88,2,104,13,255,255,255,255,8};
#define vcfSubMenuMax 4 

class module_vcf 
{
    public:
        const char *subMenuText[4] = { "2 poles v1", "2 poles v2", "4 poles", "test" } ;
        const char *potsName[3] = {"    ","Cutf","Reso"} ;
        uint8_t phaseTrig;
        int16_t filterValue;
        int16_t filterOut;
        uint16_t r4pole1(uint16_t sample, uint16_t cutoff, uint16_t resonance);
        uint16_t r2pole1(uint16_t sample, uint16_t cutoff, uint16_t resonance);
        uint16_t r2pole2(uint16_t sample, uint16_t cutoff, uint16_t resonance);
        uint16_t test(uint16_t sample, uint16_t cutoff, uint16_t resonance); 
    private:
        static float in1, in2, in3, in4, buf1, buf2, buf3, buf4, fb, in, cut, q;
        static int16_t oldOut;
};
#endif
